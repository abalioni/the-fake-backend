import Throttling from "./interfaces/Throttling";
import ThrottlingManager from "./interfaces/ThrottlingManager";

export function createThrottlingManager(throttlings: Array<Throttling> = []): ThrottlingManager {
  let currentThrottlingIndex: number | null = null;

  return {
    /**
     * Get all throttlings.
     * 
     * @return {Array<Throttling>} An array containing all the throttlings.
     */
    getAll(): Array<Throttling> {
      return throttlings;
    },

    /**
     * Get current throttling.
     * 
     * @return {Throttling} The current throttling.
     */
    getCurrent(): Throttling | null {
      if (currentThrottlingIndex !== null) {
        return throttlings[currentThrottlingIndex];
      }
      return null;
    },

    /**
     * Get current proxy delay generating a random number between the throttling minimum and maximum milliseconds.
     * 
     * @return {number} A random number generated by throttling minimum and maximum milliseconds.
     */
    getCurrentDelay(): number {
      const { values: [minimum = 0, maximum = 0] = [] } = this.getCurrent() || {};
      return Math.random() * (minimum + 1 - maximum) + maximum;
    },

    /**
     * Toggle current throttling moving to the next position on list.
     */
    toggleCurrent(): void {
      if (currentThrottlingIndex === null) {
        currentThrottlingIndex = 0;
      } else if (currentThrottlingIndex === throttlings.length - 1) {
        currentThrottlingIndex = null;
      } else {
        currentThrottlingIndex += 1;
      }
    }
  };
};
